__author__ = 'Reijer'



# The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

# 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

# Let us list the factors of the first seven triangle numbers:

#      1: 1
#      3: 1,3
#      6: 1,2,3,6
#     10: 1,2,5,10
#     15: 1,3,5,15
#     21: 1,3,7,21
#     28: 1,2,4,7,14,28

# We can see that 28 is the first triangle number to have over five divisors.

# What is the value of the first triangle number to have over five hundred divisors?


memo = [1]

def factor(n):
    return [i for i in range(1, n+1) if n % i == 0]

def triangle(n):
    if n == 1:
        return 1
    if len(memo) > n-1:
        return memo[n-1]
    next = n + triangle(n-1)
    if next not in memo:
        memo.append(next)
    return memo[-1]

def main():
    # print len(factor(12))
    fact, i = [], 0
    while len(fact) < 100:
        i += 1
        tri = triangle(i)
        # print i, tri
        fact = factor(tri)
        print i, tri, len(fact), fact
    print i





if __name__ == '__main__':
    main()